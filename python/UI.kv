<CCheckBox>:
    canvas:
        Clear:
        Color:
            rgba: 37, 220, 248, .89
        Rectangle:
            size: 32, 32
            pos: int(self.center_x - 16), int(self.center_y - 16)
        Color:
            rgba: 22, 0, 0, 0.89
        Rectangle:
            source: 'atlas://data/images/defaulttheme/checkbox%s_%s' % (('_radio' if self.group else ''), ('on' if self.active else 'off'))
            size: 32, 32
            pos: int(self.center_x - 16), int(self.center_y - 16)

<PicCheckBox>:

MyScreenManager:
    StartScreen:
    SoundCheckScreen:
    SoundCheckPerformScreen:
    PlayScreen:
    LoadScreen:
<StartScreen>:
    name:'MainMenu'
    on_enter:root.SetText()
    FloatLayout:
        Label:
            id:status
            text:
            size_hint:(.5, .2)
            pos_hint: {"x": 0, 'y':0.8}
        Button:
            size_hint:(.5, .2)
            pos:(20, 80)
            text: 'Soundcheck new drumkit'
            pos_hint: {"x": 0, 'y':0.6}
            on_press: root.manager.current = 'SoundCheck'
        Button:
            size_hint:(.5, .2)
            pos:(20, 60)
            pos_hint: {"x": 0, 'y':0.4}
            text: 'Load Drumkit'
            on_press: root.manager.current = 'LoadKit'
        Button:
            size_hint:(.5, .2)
            pos:(20, 40)
            pos_hint: {"x": 0, 'y':0.2}
            text: 'Drum-Off!'
            on_press: root.manager.current = 'PlayScreen'
        Button:
            size_hint:(.5, .2)
            pos_hint: {"x": 0, 'y':0.0}
            pos:(20, 20)
            text: 'Quit'
            on_press: root.quit()
<PlayScreen>:
    name:'PlayScreen'
    temp:temperature.value
    train_size:trs.value
    thresh:threshold.value
    FloatLayout:
        Label:
            text: root.performMessage
            size_hint:(.5, .2)
            pos_hint: {"x": 0, 'y':0.8}
        CCheckBox:
            id: modChk
            text:'modify'
            size_hint:(0.1,0.01)
            pos_hint:{'x':0.47,'y':0.71}
            active:True
            on_release: root.setModify(self.active)
        Label:
            text: 'update model'
            size_hint:(.01, .01)
            pos_hint: {"x": 0.61, 'y':0.71}
        CCheckBox:
            id: stepChk
            text:'fixed'
            size_hint:(0.1,0.01)
            pos_hint:{'x':0.47,'y':0.65}
            active:True
            on_release:root.toggleStep()
        Label:
            text: 'Stop after perform'
            size_hint:(.01, .01)
            pos_hint: {"x": 0.61, 'y':0.65}
        CCheckBox:
            id: emptyChk
            text:'fixed'
            size_hint:(0.1,0.01)
            pos_hint:{'x':0.47,'y':0.59}
            #active:True
            #on_release:root.toggleStep()
        Label:
            text: 'Use adjustment'
            size_hint:(.01, .01)
            pos_hint: {"x": 0.61, 'y':0.59}
        Label:
            text: 'Threshold adj.:'
            size_hint:(.01, .01)
            pos_hint: {"x": 0.8, 'y':0.62}#
        Label:
            text:str(root.thresh)[:5]
            size_hint:(.01, .01)
            pos_hint: {"x": 0.95, 'y':0.62}
        Slider:
            id: threshold
            step: 0.005
            max:0.5
            min:-0.5
            value:0.00
            size_hint:(.3, .05)
            pos_hint: {"x": 0.7, 'y':0.57}
            on_value:root.setThresh(0,0.00) if not emptyChk.active else root.setThresh(*args)

#        Label:
#            text: root.lastMessage
#            size_hint:(.5, .2)
#            pos_hint: {"x": 0.5, 'y':0.6}
#        Label:
#            text: root.lastGenPart
#            size_hint:(.5, .2)
#            pos_hint: {"x": 0.5, 'y':0.55}
        CCheckBox:
            id: tmpChk
            text:'fixed'
            size_hint:(0.1,0.01)
            pos_hint:{'x':0.47,'y':0.47}
        Label:
            text: 'dynamic temp.'
            size_hint:(.01, .01)
            pos_hint: {"x": 0.61, 'y':0.47}
        Label:
            text: 'Temperature:'
            size_hint:(.01, .01)
            pos_hint: {"x": 0.8, 'y':0.50}#
        Slider:
            id: temperature
            step: 0.01
            max:4
            min:0.01
            value:0.8
            size_hint:(.3, .05)
            pos_hint: {"x": 0.7, 'y':0.45}
            on_value:root.setTemp(0,-1) if tmpChk.active  else root.setTemp(*args)

        Label:
            text: 'dynamic' if tmpChk.active  else str(root.temp)[:4]
            size_hint:(.01, .01)
            pos_hint: {"x": 0.95, 'y':0.50}

        CCheckBox:
            id:tdsChk
            text:'fixed'
            on_release: root.toggleSlider()
            size_hint:(0.1,0.01)
            pos_hint:{'x':0.47,'y':0.53}
        Label:
            text: 'use default 1.33'
            size_hint:(.01, .01)
            pos_hint: {"x": 0.61, 'y':0.53}
        Label:
            text: 'Training data size:'
            size_hint:(.01, .01)
            pos_hint: {"x": 0.8, 'y':0.56}
        Slider:
            id: trs
            step: 0.1
            max:12
            min:1
            value:1.33
            size_hint:(.3, .05)
            pos_hint: {"x": 0.7, 'y':0.51}
            on_value:root.setTrSize(0,1.33) if tdsChk.active else root.setTrSize(*args)
        Label:
            text: '1.33' if tdsChk.active else str(root.train_size)[:3]
            size_hint:(.01, .01)
            pos_hint: {"x": 0.95, 'y':0.56}

        Button:
            text: 'Back to menu!'
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.0}
            on_press: root.stopAll(); root.manager.current = 'MainMenu'
        Button:
            id:playBtn
            text: root.pBtnMessage
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.2}
            on_press: root.performMessage='Get Ready!'
            on_release: root.playButton()
        Button:
            text: 'Computer'
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.4}
            on_press: root.performMessage='Generating...'
            on_release: root.doComputerTurn()
        Button:
            id:playBackBtn
            text: root.playBackMessage
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.6}
            on_press: root.performMessage='playing...'
            on_release: root.playBackLast()
<LoadScreen>:
    name:'LoadKit'
    FloatLayout:
        Label:
            text: 'Choose a kit'
            size_hint:(.5, .2)
            pos_hint: {"x": 0, 'y':0.8}
        FileChooserListView:
            size_hint:(.5, .9)
            pos_hint: {"x": .5, 'y':0.1}
            id: fc
            path: "./Kits"
            rootpath:"./Kits"
            dirselect: True
            filters:[root.is_dir]

        Button:
            text:   'Load'
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.6}
            on_release: root.loadKit(fc.selection)
        Button:
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.0}
            text: 'Back to menu'
            on_press: root.manager.current = 'MainMenu'
<SoundCheckScreen>:
    name:'SoundCheck'
    FloatLayout:
        Label:
            text: 'Kit Name'
            size_hint:(.25, .05)
            pos_hint: {"x": 0, 'y':0.95}
        TextInput:
            id: drumkit_name
            size_hint:(.5, .05)
            pos_hint: {"x": .5, 'y':0.95}
        Label:
            text: 'Drum Name'
            size_hint:(.25, .05)
            pos_hint: {"x": 0, 'y':0.90}
        Label:
            text:'Press \"Rec.\" to record and play 16 samples of each drum your kit contains'
            size_hint:(.5, .05)
            pos_hint: {"x": .5, 'y':0.90}
        Label:
            text: 'Kick'
            size_hint:(.25, .05)
            pos_hint: {"x": 0, 'y':0.85}
        TextInput:
            id: kdn
            input_filter: 'int'
            hint_text:''
            size_hint:(.25, .05)
            pos_hint: {"x": .625, 'y':0.85}
        NumberButton:
            id:kd0
            group:'kick'
            background_radio_normal : './red' + 'One' + '.png'
            background_radio_down : './red' + 'One' + 'Act.png'
            background_radio_disabled_normal : './green' + 'One' + '.png'
            background_radio_disabled_down :'./green' + 'One' + 'Act.png'
            on_active:root.kdTake=0
            active:True
            size_hint:(.05, .05)
            pos_hint: {"x": .625, 'y':0.85}
        RecButton:
            source: './RecBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .45, 'y':0.85}
            on_release:root.runSoundCheck(1+root.kdTake)if self.isActive else root.stopSoundCheck()
            on_release: if(root.getDrumChecked(0+root.kdTake)==0):root.addDrumToKit(0+root.kdTake)
            on_release: if(root.getDrumChecked(0+root.kdTake)==1):root.ids['kd'+str(root.kdTake)].disabled=True
        PlayButton:
            id:play1
            text:'1'
            source: './PlayBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .5, 'y':0.85}
            on_release:root.playSoundCheck(1) if self.isActive else root.stopSoundCheck()
#        StopButton:
#            source: './StopBtnDeactivated.png'
#            size_hint:(.05, .05)
#            pos_hint: {"x": .55, 'y':0.85}
#            on_press:root.stopSoundCheck()

        Label:
            text: 'Snare'
            size_hint:(.25, .05)
            pos_hint: {"x": 0, 'y':0.80}
        TextInput:
            id: snn
            input_filter: 'int'
            hint_text:''
            size_hint:(.25, .05)
            pos_hint: {"x": .625, 'y':0.80}
        NumberButton:
            id:sn0
            background_radio_normal : './red' + 'One' + '.png'
            background_radio_down : './red' + 'One' + 'Act.png'
            background_radio_disabled_normal : './green' + 'One' + '.png'
            background_radio_disabled_down :'./green' + 'One' + 'Act.png'
            active:True
            on_active:root.snTake=0
            group:'snare'
            #source:'./redOneAct.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .625, 'y':0.80}
        RecButton:
            source: './RecBtn.png'
            text: 'Kick'
            size_hint:(.05, .05)
            pos_hint: {"x": .45, 'y':0.80}
            on_release:root.runSoundCheck(1+root.snTake)if self.isActive else root.stopSoundCheck()
            on_release: if(root.getDrumChecked(1+root.snTake)==0):root.addDrumToKit(1+root.snTake)
            on_release: if(root.getDrumChecked(1+root.snTake)==1):root.ids['sn'+str(root.snTake)].disabled=True
        PlayButton:
            id:play2
            text:'2'
            source: './PlayBtn.png'
            text: 'Kick'
            size_hint:(.05, .05)
            pos_hint: {"x": .5, 'y':0.80}
            on_release:root.playSoundCheck(2) if self.isActive else root.stopSoundCheck()
            #on_press: root.manager.current = 'MainMenu'
#        StopButton:
#            source: './StopBtnDeactivated.png'
#            text: 'Kick'
#            size_hint:(.05, .05)
#            pos_hint: {"x": .55, 'y':0.80}
#            on_press:root.stopSoundCheck()
#            #on_press: root.manager.current = 'MainMenu'
        Label:
            text: 'Hihat'
            size_hint:(.25, .05)
            pos_hint: {"x": 0, 'y':0.75}
        TextInput:
            id: hhn
            input_filter: 'int'
            hint_text:''
            size_hint:(.25, .05)
            pos_hint: {"x": .625, 'y':0.75}
        NumberButton:
            id:hh0
            background_radio_normal : './red' + 'One' + '.png'
            background_radio_down : './red' + 'One' + 'Act.png'
            background_radio_disabled_normal : './green' + 'One' + '.png'
            background_radio_disabled_down :'./green' + 'One' + 'Act.png'
            active:True
            on_active:root.hhTake=0
            group:'hihat'
            size_hint:(.05, .05)
            pos_hint: {"x": .625, 'y':0.75}
        NumberButton:
            id:hh1
            background_radio_normal : './red' + 'Two' + '.png'
            background_radio_down : './red' + 'Two' + 'Act.png'
            background_radio_disabled_normal : './green' + 'Two' + '.png'
            background_radio_disabled_down :'./green' + 'Two' + 'Act.png'
            on_active:root.hhTake=1
            group:'hihat'
            size_hint:(.05, .05)
            pos_hint: {"x": .675, 'y':0.75}
        NumberButton:
            id:hh2
            background_radio_normal : './red' + 'Three' + '.png'
            background_radio_down : './red' + 'Three' + 'Act.png'
            background_radio_disabled_normal : './green' + 'Three' + '.png'
            background_radio_disabled_down :'./green' + 'Three' + 'Act.png'
            on_active:root.hhTake=2
            group:'hihat'
            size_hint:(.05, .05)
            pos_hint: {"x": .725, 'y':0.75}
        RecButton:
            source: './RecBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .45, 'y':0.75}
            on_release:root.runSoundCheck(2+root.hhTake)if self.isActive else root.stopSoundCheck()
            on_release: if(root.getDrumChecked(2+root.hhTake)==0):root.addDrumToKit(2+root.hhTake)
            on_release: if(root.getDrumChecked(2+root.hhTake)==1):root.ids['hh'+str(root.hhTake)].disabled=True
            #on_release: if(root.getDrumChecked(3)==0):root.addDrumToKit(3)
        PlayButton:
            id:play3
            text:'3'
            source: './PlayBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .5, 'y':0.75}
            on_release:root.playSoundCheck(3) if self.isActive else root.stopSoundCheck()
#        StopButton:
#            source: './StopBtnDeactivated.png'
#            size_hint:(.05, .05)
#            pos_hint: {"x": .55, 'y':0.75}
#            on_press:root.stopSoundCheck()
        Label:
            text: 'Toms'
            size_hint:(.25, .05)
            pos_hint: {"x": 0, 'y':0.70}
        TextInput:
            id: ttn
            input_filter: 'int'
            hint_text:'# of Tom-Toms'
            size_hint:(.25, .05)
            pos_hint: {"x": .625, 'y':0.70}
        NumberButton:
            id:tt0
            background_radio_normal : './red' + 'One' + '.png'
            background_radio_down : './red' + 'One' + 'Act.png'
            background_radio_disabled_normal : './green' + 'One' + '.png'
            background_radio_disabled_down :'./green' + 'One' + 'Act.png'
            active:True
            on_active:root.ttTake=0
            group:'hihat'
            size_hint:(.05, .05)
            pos_hint: {"x": .625, 'y':0.70}
        NumberButton:
            id:tt1
            background_radio_normal : './red' + 'Two' + '.png'
            background_radio_down : './red' + 'Two' + 'Act.png'
            background_radio_disabled_normal : './green' + 'Two' + '.png'
            background_radio_disabled_down :'./green' + 'Two' + 'Act.png'
            on_active:root.ttTake=1
            group:'hihat'
            size_hint:(.05, .05)
            pos_hint: {"x": .675, 'y':0.70}
        NumberButton:
            id:tt2
            background_radio_normal : './red' + 'Three' + '.png'
            background_radio_down : './red' + 'Three' + 'Act.png'
            background_radio_disabled_normal : './green' + 'Three' + '.png'
            background_radio_disabled_down :'./green' + 'Three' + 'Act.png'
            on_active:root.ttTake=2
            group:'hihat'
            size_hint:(.05, .05)
            pos_hint: {"x": .725, 'y':0.70}
        RecButton:
            source: './RecBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .45, 'y':0.70}
            on_release:root.runSoundCheck(5+root.ttTake)if self.isActive else root.stopSoundCheck()
            on_release: if(root.getDrumChecked(5+root.ttTake)==0):root.addDrumToKit(5+root.ttTake)
            on_release: if(root.getDrumChecked(5+root.ttTake)==1):root.ids['tt'+str(root.ttTake)].disabled=True
            #on_release: if(root.getDrumChecked(3)==0):root.addDrumToKit(3)
        PlayButton:
            id:play5
            text:'5'
            source: './PlayBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .5, 'y':0.70}
            on_release:root.playSoundCheck(5) if self.isActive else root.stopSoundCheck()
#        StopButton:
#            source: './StopBtnDeactivated.png'
#            size_hint:(.05, .05)
#            pos_hint: {"x": .55, 'y':0.70}
#            on_press:root.stopSoundCheck()
        Label:
            text: 'Ride'
            size_hint:(.25, .05)
            pos_hint: {"x": 0, 'y':0.65}
        TextInput:
            id: rdn
            input_filter: 'int'
            hint_text:'# of Ride cymbals'
            size_hint:(.25, .05)
            pos_hint: {"x": .625, 'y':0.65}
        RecButton:
            source: './RecBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .45, 'y':0.65}
            on_release:root.runSoundCheck(12) if self.isActive else root.stopSoundCheck()
        PlayButton:
            id:play12
            text:'12'
            source: './PlayBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .5, 'y':0.65}
            on_release:root.playSoundCheck(12) if self.isActive else root.stopSoundCheck()
#        StopButton:
#            source: './StopBtnDeactivated.png'
#            size_hint:(.05, .05)
#            pos_hint: {"x": .55, 'y':0.65}
#            on_press:root.stopSoundCheck()

        Label:
            text: 'Crashes'
            size_hint:(.25, .05)
            pos_hint: {"x": 0, 'y':0.60}
        TextInput:
            id: crn
            input_filter: 'int'
            hint_text:'# of Crash cymbals'
            size_hint:(.25, .05)
            pos_hint: {"x": .625, 'y':0.60}
        RecButton:
            source: './RecBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .45, 'y':0.60}
            on_release:root.runSoundCheck(13) if self.isActive else root.stopSoundCheck()

        PlayButton:
            id:play13
            text:'13'
            source: './PlayBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .5, 'y':0.60}
            on_release:root.playSoundCheck(13) if self.isActive else root.stopSoundCheck()

#        StopButton:
#            source: './StopBtnDeactivated.png'
#            size_hint:(.05, .05)
#            pos_hint: {"x": .55, 'y':0.60}
#            on_press:root.stopSoundCheck()

        Label:
            text: 'Toys'
            size_hint:(.25, .05)
            pos_hint: {"x": 0, 'y':0.55}
        TextInput:
            id: ton
            input_filter: 'int'
            hint_text:'# of Misc. drums/cymbals'
            size_hint:(.25, .05)
            pos_hint: {"x": .625, 'y':0.55}
        RecButton:
            id:rec17
            text:'17'
            source: './RecBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .45, 'y':0.55}
            on_release:root.runSoundCheck(17) if self.isActive else root.stopSoundCheck()
        PlayButton:
            id:play17
            text:'17'
            source: './PlayBtn.png'
            size_hint:(.05, .05)
            pos_hint: {"x": .5, 'y':0.55}
            on_release:root.playSoundCheck(17) if self.isActive else root.stopSoundCheck()


#        StopButton:
#            source: './StopBtnDeactivated.png'
#            size_hint:(.05, .05)
#            pos_hint: {"x": .55, 'y':0.55}
#            on_press:root.stopSoundCheck()

        Button:
            text:   'Finish soundcheck'
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.2}
#            on_press: if(drumkit_name.text==''):drumkit_name.text='Default'
#            on_press: if(kdn.text==''):kdn.text='1'
#            on_press: if(snn.text==''):snn.text='1'
#            on_press: if(hhn.text==''):hhn.text='1'
#            #on_press: if(hhn.text=='1'):hhn.text='3' #for ohh, chh and hh-stomp do this elsewhere
#            on_press: if(ttn.text==''):ttn.text='0'
#            on_press: if(rdn.text==''):rdn.text='0'
#            on_press: if(crn.text==''):crn.text='0'
#            on_press: if(ton.text==''):ton.text='0'
            #on_press: root.saveKitTemplate(*args)
            on_release: root.finishSoundCheck()
            on_release: root.manager.current = 'MainMenu'
        Button:
            text: 'Back to menu'
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.0}
            on_press: root.manager.current = 'MainMenu'
<SoundCheckPerformScreen>:
    name:'SoundCheckPerform'
    FloatLayout:

        Label:
            id:nDrums
            text: root.drmMessage
            size_hint:(.5, .2)
            pos_hint: {"x": 0, 'y':0.8}
        Label:
            id:msg
            text: root.performMessage
            size_hint:(.5, .2)
            pos_hint: {"x": 0.5, 'y':0.8}
        Label:
            id:drumNro
            text:root.nrMessage
            size_hint:(.5, .2)
            pos_hint: {"x": 0.5, 'y':0.6}
        Label:
            id:finishStatus
            text:root.finishStatus
            size_hint:(.5, .2)
            pos_hint: {"x": 0.5, 'y':0.2}
        Button:
            id:checkBtn
            text: root.btnMessage
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.4}
            on_press: root.performMessage='RECORDING DRUM Nr:{}'.format(root.nrMessage)
            on_release: root.runSoundCheck(drumNro.text)
        Button:
            id:finishBtn
            text: root.finishMessage
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.2}
            on_release: root.finishSoundCheck()
        Button:
            text: 'Back to menu'
            size_hint:(.5, .2)
            pos_hint: {"x": .0, 'y':0.0}
            on_press: root.manager.current = 'MainMenu'
